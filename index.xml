<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Kurotych ðŸ‡ºðŸ‡¦</title><link>https://kurotych.com/</link><description>Recent content on Kurotych ðŸ‡ºðŸ‡¦</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 11 Feb 2024 13:09:33 +0200</lastBuildDate><atom:link href="https://kurotych.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Building and Deploying Rust Binaries Across Linux Distributions.</title><link>https://kurotych.com/posts/distributing-rust-binaries/</link><pubDate>Sun, 11 Feb 2024 13:09:33 +0200</pubDate><guid>https://kurotych.com/posts/distributing-rust-binaries/</guid><description>The Rust ecosystem has numerous platforms and extensive documentation to support cross-compilation features.
But does it work as expected?
Well, if your binary has few shared library dependencies, then it likely will. Compiling for x86_64-unknown-linux-musl significantly increases the likelihood that your binary will operate across different Linux distributions.
However, the reality in production can be quite different. We still encounter dependency hell, and many Rust crates rely on shared libraries that may have varying names and paths.</description></item><item><title>Improve software development routine. Local database setup.</title><link>https://kurotych.com/posts/improve_psql_routine/</link><pubDate>Fri, 17 Nov 2023 11:11:08 +0300</pubDate><guid>https://kurotych.com/posts/improve_psql_routine/</guid><description>Almost all software developers use databases in their daily routines.
The inconveniences can come when you need to work with different types of databases or different versions. Fortunately, there is a common way to work with all popular databases.
Prerequirements: Linux, Docker.
1. Start database server and DB management tool With docker, you can run whatever database you want without installation hassle.
Let&amp;rsquo;s take the PostgreSQL db as an example.</description></item><item><title>Minimal Setup: Configuring Rust Debugger in Neovim</title><link>https://kurotych.com/posts/rust_neovim_debugger/</link><pubDate>Mon, 20 Feb 2023 22:56:10 +0200</pubDate><guid>https://kurotych.com/posts/rust_neovim_debugger/</guid><description>Prerequirements You know how to setup and configure neovim plugins. You use UNIX-like OS Step-by-Step guide Install the next neovim plugins nvim-dap nvim-dap-ui -- Example with packer.nvim use(&amp;#34;mfussenegger/nvim-dap&amp;#34;) use { &amp;#34;rcarriga/nvim-dap-ui&amp;#34;, requires = {&amp;#34;mfussenegger/nvim-dap&amp;#34;} } Install vscode-lldb
Download file specific to your system https://github.com/vadimcn/vscode-lldb/releases Unpack it by unzip utility. In my case I unpacked it to ~/Sources/lldb The result of execution unzip codelldb-x86_64-linux.vsix in ~/Sources/lldb: codelldb execution file is available by path: ~/Sources/lldb/extension/adapter Configure nvim-dap in your init.</description></item><item><title>Tech description of this site</title><link>https://kurotych.com/posts/how-i-built-this-site1/</link><pubDate>Thu, 16 Feb 2023 18:29:46 +0200</pubDate><guid>https://kurotych.com/posts/how-i-built-this-site1/</guid><description>Technologies This site hosted by github pages and built by hugo plus hugo-PaperMod theme.
Hugo I choose Hugo because it&amp;rsquo;s fast, and I like the simplicity of filling the site content with Markdown. Having i18n out-of-box also a big advantage of this tool.
Github pages Provides ready to use CI/CD process. Which means my site automatically updates after commit pushed to repository.1
Costs It costs my only price of domain kurotych.</description></item></channel></rss>